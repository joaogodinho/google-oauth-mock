upstream google-oauth {
  server google-oauth:3000;
}

# Upstream to proxy requests to google
upstream accounts.google-apis {
  server accounts.google.com:443;
}
upstream www.google-apis {
  server www.googleapis.com:443;
}
upstream oauth2.google-apis {
  server oauth2.googleapis.com:443;
}

# Send everything to node container
# server {
#   listen 443 ssl;
#   # server_name accounts.google.com oauth2.googleapis.com www.googleapis.com;
#   server_name accounts.google.com;

#   ssl_certificate            /etc/nginx/accounts.google.com+2.pem;
#   ssl_certificate_key        /etc/nginx/accounts.google.com+2-key.pem;

#   location / {
#      proxy_pass http://google-oauth;
#   }
# }

server {
  listen 443 ssl;
  server_name accounts.google.com;

  ssl_certificate            /etc/nginx/certs/accounts.google.com+2.pem;
  ssl_certificate_key        /etc/nginx/certs/accounts.google.com+2-key.pem;

  location / {
    proxy_pass http://google-oauth;
    # proxy_pass https://accounts.google-apis;
    # proxy_set_header Host $host;
  }
}

server {
  listen 443 ssl;
  server_name oauth2.googleapis.com;

  ssl_certificate            /etc/nginx/certs/accounts.google.com+2.pem;
  ssl_certificate_key        /etc/nginx/certs/accounts.google.com+2-key.pem;

  # To access the response body, use the following
  # access_log  /var/log/access.log bodylog;
  # lua_need_request_body on;
  # set $resp_body "";
  # body_filter_by_lua '
  #     local resp_body = string.sub(ngx.arg[1], 1, 2000)
  #     ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
  #     if ngx.arg[2] then
  #     ngx.var.resp_body = ngx.ctx.buffered
  #     end
  # ';
  location / {
    # proxy_pass https://accounts.google-apis;
    # proxy_set_header Host $host;
    proxy_pass http://google-oauth;
  }
}

server {
  listen 443 ssl;
  server_name www.googleapis.com;

  ssl_certificate            /etc/nginx/certs/accounts.google.com+2.pem;
  ssl_certificate_key        /etc/nginx/certs/accounts.google.com+2-key.pem;

  location / {
    proxy_pass http://google-oauth;
    # proxy_pass https://www.google-apis;
    # proxy_set_header Host $host;
  }
}